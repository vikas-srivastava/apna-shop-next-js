import type { Config } from 'tailwindcss'

const config: Config = {
    content: [
        './pages/**/*.{js,ts,jsx,tsx,mdx}',
        './components/**/*.{js,ts,jsx,tsx,mdx}',
        './app/**/*.{js,ts,jsx,tsx,mdx}',
    ],
    theme: {
        extend: {
            colors: {
                primary: {
                    50: 'rgb(var(--color-primary-50) / <alpha-value>)',
                    100: 'rgb(var(--color-primary-100) / <alpha-value>)',
                    200: 'rgb(var(--color-primary-200) / <alpha-value>)',
                    300: 'rgb(var(--color-primary-300) / <alpha-value>)',
                    400: 'rgb(var(--color-primary-400) / <alpha-value>)',
                    500: 'rgb(var(--color-primary-500) / <alpha-value>)',
                    600: 'rgb(var(--color-primary-600) / <alpha-value>)',
                    700: 'rgb(var(--color-primary-700) / <alpha-value>)',
                    800: 'rgb(var(--color-primary-800) / <alpha-value>)',
                    900: 'rgb(var(--color-primary-900) / <alpha-value>)',
                },
                secondary: {
                    50: 'rgb(var(--color-secondary-50) / <alpha-value>)',
                    100: 'rgb(var(--color-secondary-100) / <alpha-value>)',
                    200: 'rgb(var(--color-secondary-200) / <alpha-value>)',
                    300: 'rgb(var(--color-secondary-300) / <alpha-value>)',
                    400: 'rgb(var(--color-secondary-400) / <alpha-value>)',
                    500: 'rgb(var(--color-secondary-500) / <alpha-value>)',
                    600: 'rgb(var(--color-secondary-600) / <alpha-value>)',
                    700: 'rgb(var(--color-secondary-700) / <alpha-value>)',
                    800: 'rgb(var(--color-secondary-800) / <alpha-value>)',
                    900: 'rgb(var(--color-secondary-900) / <alpha-value>)',
                },
                accent: {
                    50: 'rgb(var(--color-accent-50) / <alpha-value>)',
                    100: 'rgb(var(--color-accent-100) / <alpha-value>)',
                    200: 'rgb(var(--color-accent-200) / <alpha-value>)',
                    300: 'rgb(var(--color-accent-300) / <alpha-value>)',
                    400: 'rgb(var(--color-accent-400) / <alpha-value>)',
                    500: 'rgb(var(--color-accent-500) / <alpha-value>)',
                    600: 'rgb(var(--color-accent-600) / <alpha-value>)',
                    700: 'rgb(var(--color-accent-700) / <alpha-value>)',
                    800: 'rgb(var(--color-accent-800) / <alpha-value>)',
                    900: 'rgb(var(--color-accent-900) / <alpha-value>)',
                },
                success: {
                    50: 'rgb(var(--color-success-50) / <alpha-value>)',
                    100: 'rgb(var(--color-success-100) / <alpha-value>)',
                    200: 'rgb(var(--color-success-200) / <alpha-value>)',
                    300: 'rgb(var(--color-success-300) / <alpha-value>)',
                    400: 'rgb(var(--color-success-400) / <alpha-value>)',
                    500: 'rgb(var(--color-success-500) / <alpha-value>)',
                    600: 'rgb(var(--color-success-600) / <alpha-value>)',
                    700: 'rgb(var(--color-success-700) / <alpha-value>)',
                    800: 'rgb(var(--color-success-800) / <alpha-value>)',
                    900: 'rgb(var(--color-success-900) / <alpha-value>)',
                },
                warning: {
                    50: 'rgb(var(--color-warning-50) / <alpha-value>)',
                    100: 'rgb(var(--color-warning-100) / <alpha-value>)',
                    200: 'rgb(var(--color-warning-200) / <alpha-value>)',
                    300: 'rgb(var(--color-warning-300) / <alpha-value>)',
                    400: 'rgb(var(--color-warning-400) / <alpha-value>)',
                    500: 'rgb(var(--color-warning-500) / <alpha-value>)',
                    600: 'rgb(var(--color-warning-600) / <alpha-value>)',
                    700: 'rgb(var(--color-warning-700) / <alpha-value>)',
                    800: 'rgb(var(--color-warning-800) / <alpha-value>)',
                    900: 'rgb(var(--color-warning-900) / <alpha-value>)',
                },
                error: {
                    50: 'rgb(var(--color-error-50) / <alpha-value>)',
                    100: 'rgb(var(--color-error-100) / <alpha-value>)',
                    200: 'rgb(var(--color-error-200) / <alpha-value>)',
                    300: 'rgb(var(--color-error-300) / <alpha-value>)',
                    400: 'rgb(var(--color-error-400) / <alpha-value>)',
                    500: 'rgb(var(--color-error-500) / <alpha-value>)',
                    600: 'rgb(var(--color-error-600) / <alpha-value>)',
                    700: 'rgb(var(--color-error-700) / <alpha-value>)',
                    800: 'rgb(var(--color-error-800) / <alpha-value>)',
                    900: 'rgb(var(--color-error-900) / <alpha-value>)',
                },
                text: {
                    primary: 'rgb(var(--text-primary) / <alpha-value>)',
                    secondary: 'rgb(var(--text-secondary) / <alpha-value>)',
                    accent: 'rgb(var(--text-accent) / <alpha-value>)',
                    success: 'rgb(var(--text-success) / <alpha-value>)',
                    warning: 'rgb(var(--text-warning) / <alpha-value>)',
                    error: 'rgb(var(--text-error) / <alpha-value>)',
                },
            },
            fontFamily: {
                sans: ['Inter', 'system-ui', 'sans-serif'],
                serif: ['Georgia', 'serif'],
                mono: ['JetBrains Mono', 'monospace'],
            },
            borderRadius: {
                'theme-sm': '4px',
                'theme-md': '8px',
                'theme-lg': '12px',
                'theme-xl': '16px',
            },
            spacing: {
                'theme-xs': '0.5rem',
                'theme-sm': '0.75rem',
                'theme-md': '1rem',
                'theme-lg': '1.5rem',
                'theme-xl': '2rem',
                'theme-2xl': '3rem',
                'theme-3xl': '4rem',
            },
            maxWidth: {
                'theme-container': '1280px',
            },
            animation: {
                'fade-in': 'fadeIn 0.3s ease-in-out',
                'slide-in': 'slideIn 0.3s ease-out',
                'bounce-subtle': 'bounceSubtle 0.6s ease-in-out',
            },
            keyframes: {
                fadeIn: {
                    '0%': { opacity: '0' },
                    '100%': { opacity: '1' },
                },
                slideIn: {
                    '0%': { transform: 'translateY(10px)', opacity: '0' },
                    '100%': { transform: 'translateY(0)', opacity: '1' },
                },
                bounceSubtle: {
                    '0%, 100%': { transform: 'translateY(0)' },
                    '50%': { transform: 'translateY(-5px)' },
                },
            },
        },
    },
    plugins: [],
}

export default config